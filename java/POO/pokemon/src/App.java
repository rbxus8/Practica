/*
üéÆ EJERCICIO POO: SIMULADOR B√ÅSICO DE COMBATE POK√âMON

üß© OBJETIVO:
Crear una aplicaci√≥n en Java que simule una batalla entre Pok√©mon usando los principios de Programaci√≥n Orientada a Objetos (POO).

üóÇÔ∏è CLASES OBLIGATORIAS:

1. Clase abstracta o base: Pokemon
   - Atributos:
     - String nombre
     - int nivel
     - int salud
     - String tipo
   - M√©todos:
     - void atacar(Pokemon objetivo) ‚Üí (abstracto o base)
     - void recibirDa√±o(int da√±o)
     - boolean estaVivo()

2. Subclases que heredan de Pokemon (m√≠nimo 2 tipos):
   - PokemonFuego
   - PokemonAgua
   - PokemonPlanta
   - Deben sobrescribir el m√©todo atacar() con l√≥gica espec√≠fica por tipo.
   - Incluir bonificaciones o penalizaciones por ventaja de tipo:
     - Fuego > Planta
     - Agua > Fuego
     - Planta > Agua

3. Clase Entrenador
   - Atributos:
     - String nombre
     - ArrayList<Pokemon> equipo
   - M√©todos:
     - void agregarPokemon(Pokemon p)
     - void mostrarEquipo()

4. Clase Combate
   - M√©todos:
     - void iniciar(Pokemon p1, Pokemon p2)
     - Simula un combate por turnos hasta que uno quede sin salud.

‚öîÔ∏è REGLAS DE COMBATE:
- Si el atacante tiene ventaja de tipo ‚Üí da√±o x2.
- Si el atacante tiene desventaja de tipo ‚Üí da√±o /2.
- Da√±o base sugerido: 10 puntos.

üõ†Ô∏è FUNCIONALIDADES OPCIONALES:
- Subclase PokemonLegendario con mayor poder.
- Experiencia y subida de nivel.
- M√©todo para curar Pok√©mon.
- Leer Pok√©mon o entrenadores desde archivo.

üß™ EJEMPLO DE USO:
Pokemon charmander = new PokemonFuego("Charmander", 5);
Pokemon squirtle = new PokemonAgua("Squirtle", 5);

Entrenador ash = new Entrenador("Ash");
ash.agregarPokemon(charmander);

Entrenador misty = new Entrenador("Misty");
misty.agregarPokemon(squirtle);

Combate batalla = new Combate();
batalla.iniciar(charmander, squirtle);

üìå OBJETIVOS DE APRENDIZAJE:
- Encapsulamiento
- Herencia
- Polimorfismo
- Uso de listas (ArrayList)
- M√©todos y l√≥gica por clase
*/

public class App {
    public static void main(String[] args) throws Exception {
        System.out.println("Hello, World!");
    }
}
